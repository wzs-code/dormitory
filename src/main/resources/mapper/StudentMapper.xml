<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="model.Student" >
    <result column="Sno" property="sno" jdbcType="INTEGER" />
    <result column="Name" property="name" jdbcType="VARCHAR" />
    <result column="Sex" property="sex" jdbcType="VARCHAR" />
    <result column="Dormitory" property="dormitory" jdbcType="VARCHAR" />
    <result column="Dorm" property="dorm" jdbcType="VARCHAR" />
    <result column="Telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="entrance_time" property="entrance_time" jdbcType="DATE" />
    <result column="graduation_time" property="graduation_time" jdbcType="DATE" />
    <result column="emergency_contact_person" property="emergency_contact_person" jdbcType="VARCHAR" />
    <result column="emergency_contact_number" property="emergency_contact_number" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="college" property="college" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="classes" property="classes" jdbcType="VARCHAR" />
    <result column="teacher" property="teacher" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="Idcard" property="Idcard" jdbcType="VARCHAR" />
    <result column="nation" property="nation" jdbcType="VARCHAR" />
    <result column="political_outlook" property="politicalOutlook" jdbcType="VARCHAR" />

  </resultMap>
  <insert id="insert" parameterType="model.Student">
    insert into student (sno,name,sex,dormitory,dorm,telephone,entrance_time,graduation_time,emergency_contact_person,emergency_contact_number,photo,college,major,classes,teacher,province,city,area,birthday,age,introduction,Idcard,nation,political_outlook
     )
    values (#{sno},#{name},#{sex},#{dormitory},#{dorm},#{telephone},#{entrance_time},#{graduation_time},#{emergency_contact_person},#{emergency_contact_number},#{photo},#{college},#{major},#{classes},#{teacher},#{province},#{city},#{area},#{birthday},#{age},#{introduction},#{Idcard},#{nation},#{politicalOutlook}
     )
  </insert>
  <select id="selectAll" resultMap="BaseResultMap" >
    select sno,name,sex,dormitory,dorm,telephone,entrance_time,graduation_time,emergency_contact_number,photo
    from student
  </select>

  <select id="selectTotal" resultType="java.lang.Integer">
    select count(*)
    from student
  </select>

  <delete id="delete" parameterType="model.Student">
    delete from student where sno=#{sno}
  </delete>

  <!--批量删除-->
  <delete id="deleteMany" parameterType="java.lang.String" >
    delete  from  student where sno in
    <foreach item="ids" collection="array" index="no" open="(" separator="," close=")">
      #{ids}
    </foreach>
  </delete>

  <update id="updateAll" parameterType="model.Student">
    update student set name=#{name},sex=#{sex},dormitory=#{dormitory},dorm=#{dorm},telephone=#{telephone},entrance_time=#{entrance_time},graduation_time=#{graduation_time},emergency_contact_person=#{emergency_contact_person},emergency_contact_number=#{emergency_contact_number},photo=#{photo},college=#{college},major=#{major},classes=#{classes},teacher=#{teacher},province=#{province},city=#{city},area=#{area},birthday=#{birthday},age=#{age},introduction=#{introduction},Idcard=#{Idcard},nation=#{nation},political_outlook=#{politicalOutlook} where sno=#{sno}
  </update>

  <update id="update" parameterType="model.Student">
    update student set name=#{name},dormitory=#{dormitory},dorm=#{dorm},entrance_time=#{entrance_time},college=#{college},major=#{major},classes=#{classes},teacher=#{teacher} where sno=#{sno}
  </update>

  <select id="selectSno" resultMap="BaseResultMap" >
    select sno,name,sex,dormitory,dorm,telephone,entrance_time,graduation_time,emergency_contact_person,emergency_contact_number,photo,college,major,classes,teacher,province,city,area,birthday,age,introduction,Idcard,nation,political_outlook from student where sno=#{sno}
  </select>

  <select id="selectName" resultMap="BaseResultMap" >
    select sno,name,sex,dormitory,dorm,telephone,entrance_time,graduation_time,emergency_contact_number,photo from student where name=#{name}
  </select>

  <select id="selectDormitory" resultMap="BaseResultMap" >
    select sno,name,sex,dormitory,dorm,telephone,entrance_time,graduation_time,emergency_contact_number,photo from student where dormitory=#{dormitory}
  </select>

  <select id="select_sno" resultMap="BaseResultMap" >
    select * from student where sno=#{sno}
  </select>

  <select id="findStudentObject" resultType="map">
    select sno,name,sex,dormitory,dorm,telephone,entrance_time,graduation_time,emergency_contact_number,photo
    from student
  </select>

</mapper>